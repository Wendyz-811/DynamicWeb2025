{"ast":null,"code":"var _jsxFileName = \"/Users/wendyzhan/DynamicWebFolder/DynamicWeb2025/Midterm/musicmood/src/pages/PlaylistPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TrackCard from '../components/MoodCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlaylistPage = ({\n  selectedMood,\n  favorites,\n  setFavorites\n}) => {\n  _s();\n  const [tracks, setTracks] = useState([]);\n  const [loading, setLoading] = useState(false);\n  //here is the mock data\n  useEffect(() => {\n    if (selectedMood) {\n      fetchTracks();\n    }\n  }, [selectedMood]);\n  const fetchTracks = async () => {\n    setLoading(true);\n\n    // We actually need real Spotify API token\n    const mockTracks = [{\n      id: '1',\n      name: 'Song',\n      artists: [{\n        name: 'Artist 1'\n      }],\n      album: {\n        images: [{\n          url: ''\n        }]\n      },\n      preview_url: null\n    }, {\n      id: '2',\n      name: 'Another Song',\n      artists: [{\n        name: 'Artist 2'\n      }],\n      album: {\n        images: [{\n          url: ''\n        }]\n      },\n      preview_url: null\n    }, {\n      id: '3',\n      name: 'Cool Song',\n      artists: [{\n        name: 'Artist 3'\n      }],\n      album: {\n        images: [{\n          url: ''\n        }]\n      },\n      preview_url: null\n    }, {\n      id: '4',\n      name: 'Bealtiful Song',\n      artists: [{\n        name: 'Artist 4'\n      }],\n      album: {\n        images: [{\n          url: ''\n        }]\n      },\n      preview_url: null\n    }];\n    setTimeout(() => {\n      setTracks(mockTracks);\n      setLoading(false);\n    }, 800);\n  };\n  const handleFavorite = track => {\n    const isFavorite = favorites.find(fav => fav.id === track.id);\n    if (isFavorite) {\n      setFavorites(favorites.filter(fav => fav.id !== track.id));\n    } else {\n      setFavorites([...favorites, track]);\n    }\n  };\n  if (!selectedMood) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-50 p-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-4xl mx-auto text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-3xl font-bold text-gray-800 mb-4\",\n          children: \"No mood selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"Please go to home page and select your mood\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50 p-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold text-gray-800 mb-2\",\n        children: [selectedMood.emoji, \" \", selectedMood.mood, \" Playlist\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 mb-8\",\n        children: \"Perfect songs for your current mood\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-4xl mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"Loading your playlist...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: tracks.map(track => /*#__PURE__*/_jsxDEV(TrackCard, {\n          track: track,\n          onFavorite: handleFavorite,\n          isFavorite: favorites.some(fav => fav.id === track.id)\n        }, track.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(PlaylistPage, \"y6gPkD91Y8Y8pb+jBVvcNEjxy/8=\");\n_c = PlaylistPage;\nexport default PlaylistPage;\nvar _c;\n$RefreshReg$(_c, \"PlaylistPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","TrackCard","jsxDEV","_jsxDEV","PlaylistPage","selectedMood","favorites","setFavorites","_s","tracks","setTracks","loading","setLoading","fetchTracks","mockTracks","id","name","artists","album","images","url","preview_url","setTimeout","handleFavorite","track","isFavorite","find","fav","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","emoji","mood","map","onFavorite","some","_c","$RefreshReg$"],"sources":["/Users/wendyzhan/DynamicWebFolder/DynamicWeb2025/Midterm/musicmood/src/pages/PlaylistPage.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport TrackCard from '../components/MoodCard'\n\nconst PlaylistPage = ({selectedMood, favorites, setFavorites}) => {\n  const [tracks, setTracks] = useState([])\n  const [loading, setLoading] = useState(false)\n//here is the mock data\n  useEffect(() => {\n    if (selectedMood) {\n      fetchTracks()\n    }\n  }, [selectedMood])\n\n  const fetchTracks = async () => {\n    setLoading(true)\n    \n    // We actually need real Spotify API token\n    const mockTracks = [\n      {\n        id: '1',\n        name: 'Song',\n        artists: [{name: 'Artist 1'}],\n        album: {\n          images: [{url: ''}]\n        },\n        preview_url: null\n      },\n      {\n        id: '2',\n        name: 'Another Song',\n        artists: [{name: 'Artist 2'}],\n        album: {\n          images: [{url: ''}]\n        },\n        preview_url: null\n      },\n      {\n        id: '3',\n        name: 'Cool Song',\n        artists: [{name: 'Artist 3'}],\n        album: {\n          images: [{url: ''}]\n        },\n        preview_url: null\n      },\n      {\n        id: '4',\n        name: 'Bealtiful Song',\n        artists: [{name: 'Artist 4'}],\n        album: {\n          images: [{url: ''}]\n        },\n        preview_url: null\n      },\n    ]\n    \n\n    setTimeout(() => {\n      setTracks(mockTracks)\n      setLoading(false)\n    }, 800)\n  }\n\n  const handleFavorite = (track) => {\n    const isFavorite = favorites.find(fav => fav.id === track.id)\n    \n    if (isFavorite) {\n      setFavorites(favorites.filter(fav => fav.id !== track.id))\n    } else {\n      setFavorites([...favorites, track])\n    }\n  }\n\n  if (!selectedMood) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 p-8\">\n        <div className=\"max-w-4xl mx-auto text-center\">\n          <h2 className=\"text-3xl font-bold text-gray-800 mb-4\">\n            No mood selected\n          </h2>\n          <p className=\"text-gray-600\">\n            Please go to home page and select your mood\n          </p>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-8\">\n      <div className=\"max-w-4xl mx-auto\">\n        <h1 className=\"text-4xl font-bold text-gray-800 mb-2\">\n          {selectedMood.emoji} {selectedMood.mood} Playlist\n        </h1>\n        <p className=\"text-gray-600 mb-8\">\n          Perfect songs for your current mood\n        </p>\n\n        {loading ? (\n          <div className=\"text-center py-12\">\n            <div className=\"text-4xl mb-4\"></div>\n            <p className=\"text-gray-600\">Loading your playlist...</p>\n          </div>\n        ) : (\n          <div className=\"space-y-4\">\n            {tracks.map((track) => (\n              <TrackCard\n                key={track.id}\n                track={track}\n                onFavorite={handleFavorite}\n                isFavorite={favorites.some(fav => fav.id === track.id)}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default PlaylistPage"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}