{"ast":null,"code":"const CLIENT_ID = '01e7bd2c3cd94726ac99f8dab2c7d06b';\nconst CLIENT_SECRET = '41ca7673dacf4a3fa88450fc6490c4d5';\nlet cachedToken = null;\nlet tokenExpiration = null;\nexport const getAccessToken = async () => {\n  // 如果token还在有效期内，直接返回\n  if (cachedToken && tokenExpiration && Date.now() < tokenExpiration) {\n    return cachedToken;\n  }\n  try {\n    const credentials = btoa(`${CLIENT_ID}:${CLIENT_SECRET}`);\n    const response = await fetch('https://accounts.spotify.com/api/token', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Basic ${credentials}`,\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: 'grant_type=client_credentials'\n    });\n    if (!response.ok) {\n      throw new Error('Failed to get access token');\n    }\n    const data = await response.json();\n\n    // 保存token和过期时间\n    cachedToken = data.access_token;\n    // token有效期1小时，提前5分钟刷新\n    tokenExpiration = Date.now() + (data.expires_in - 300) * 1000;\n    return cachedToken;\n  } catch (error) {\n    console.error('Error getting access token:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["CLIENT_ID","CLIENT_SECRET","cachedToken","tokenExpiration","getAccessToken","Date","now","credentials","btoa","response","fetch","method","headers","body","ok","Error","data","json","access_token","expires_in","error","console"],"sources":["/Users/wendyzhan/DynamicWebFolder/DynamicWeb2025/Midterm/musicmoodtracker/src/services/spotifyAuth.js"],"sourcesContent":["const CLIENT_ID = '01e7bd2c3cd94726ac99f8dab2c7d06b'\nconst CLIENT_SECRET = '41ca7673dacf4a3fa88450fc6490c4d5'\n\nlet cachedToken = null\nlet tokenExpiration = null\n\nexport const getAccessToken = async () => {\n  // 如果token还在有效期内，直接返回\n  if (cachedToken && tokenExpiration && Date.now() < tokenExpiration) {\n    return cachedToken\n  }\n\n  try {\n    const credentials = btoa(`${CLIENT_ID}:${CLIENT_SECRET}`)\n    \n    const response = await fetch('https://accounts.spotify.com/api/token', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Basic ${credentials}`,\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: 'grant_type=client_credentials'\n    })\n\n    if (!response.ok) {\n      throw new Error('Failed to get access token')\n    }\n\n    const data = await response.json()\n    \n    // 保存token和过期时间\n    cachedToken = data.access_token\n    // token有效期1小时，提前5分钟刷新\n    tokenExpiration = Date.now() + (data.expires_in - 300) * 1000\n    \n    return cachedToken\n  } catch (error) {\n    console.error('Error getting access token:', error)\n    throw error\n  }\n}"],"mappings":"AAAA,MAAMA,SAAS,GAAG,kCAAkC;AACpD,MAAMC,aAAa,GAAG,kCAAkC;AAExD,IAAIC,WAAW,GAAG,IAAI;AACtB,IAAIC,eAAe,GAAG,IAAI;AAE1B,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC;EACA,IAAIF,WAAW,IAAIC,eAAe,IAAIE,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGH,eAAe,EAAE;IAClE,OAAOD,WAAW;EACpB;EAEA,IAAI;IACF,MAAMK,WAAW,GAAGC,IAAI,CAAC,GAAGR,SAAS,IAAIC,aAAa,EAAE,CAAC;IAEzD,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;MACrEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,eAAe,EAAE,SAASL,WAAW,EAAE;QACvC,cAAc,EAAE;MAClB,CAAC;MACDM,IAAI,EAAE;IACR,CAAC,CAAC;IAEF,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;IAC/C;IAEA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;;IAElC;IACAf,WAAW,GAAGc,IAAI,CAACE,YAAY;IAC/B;IACAf,eAAe,GAAGE,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,CAACU,IAAI,CAACG,UAAU,GAAG,GAAG,IAAI,IAAI;IAE7D,OAAOjB,WAAW;EACpB,CAAC,CAAC,OAAOkB,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}