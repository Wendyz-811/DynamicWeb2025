{"ast":null,"code":"import { getAccessToken } from './spotifyAuth';\nexport const getRecommendations = async (genres, limit = 20) => {\n  try {\n    var _data$tracks;\n    const token = await getAccessToken();\n    console.log('Token received:', token ? 'Yes' : 'No');\n\n    // Ensure genres is an array\n    const genreArray = Array.isArray(genres) ? genres : [genres];\n    const seedGenres = genreArray.slice(0, 5).join(',');\n    const url = `https://api.spotify.com/v1/recommendations?seed_genres=${seedGenres}&limit=${limit}`;\n    console.log('Request URL:', url);\n    console.log('Genres being sent:', genreArray);\n    const response = await fetch(url, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    console.log('Response status:', response.status);\n    console.log('Response headers:', Object.fromEntries(response.headers.entries()));\n\n    // Get the response body regardless of status\n    const responseText = await response.text();\n    console.log('Response body:', responseText);\n    if (response.status === 404) {\n      console.error('❌ 404 Error - Genre not supported or endpoint issue');\n      console.error('Genres attempted:', genreArray);\n      return [];\n    }\n    if (!response.ok) {\n      console.error('❌ API Error:', response.status);\n      return [];\n    }\n\n    // Parse the response\n    const data = JSON.parse(responseText);\n    console.log('✓ Tracks received:', ((_data$tracks = data.tracks) === null || _data$tracks === void 0 ? void 0 : _data$tracks.length) || 0);\n    return data.tracks || [];\n  } catch (error) {\n    console.error('❌ Error in getRecommendations:', error);\n    return [];\n  }\n};","map":{"version":3,"names":["getAccessToken","getRecommendations","genres","limit","_data$tracks","token","console","log","genreArray","Array","isArray","seedGenres","slice","join","url","response","fetch","headers","status","Object","fromEntries","entries","responseText","text","error","ok","data","JSON","parse","tracks","length"],"sources":["/Users/wendyzhan/DynamicWebFolder/DynamicWeb2025/Midterm/musicmoodtracker/src/services/spotify.js"],"sourcesContent":["import {getAccessToken} from './spotifyAuth'\n\nexport const getRecommendations = async (genres, limit = 20) => {\n  try {\n    const token = await getAccessToken()\n    console.log('Token received:', token ? 'Yes' : 'No')\n    \n    // Ensure genres is an array\n    const genreArray = Array.isArray(genres) ? genres : [genres]\n    const seedGenres = genreArray.slice(0, 5).join(',')\n    \n    const url = `https://api.spotify.com/v1/recommendations?seed_genres=${seedGenres}&limit=${limit}`\n    console.log('Request URL:', url)\n    console.log('Genres being sent:', genreArray)\n    \n    const response = await fetch(url, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    })\n\n    console.log('Response status:', response.status)\n    console.log('Response headers:', Object.fromEntries(response.headers.entries()))\n\n    // Get the response body regardless of status\n    const responseText = await response.text()\n    console.log('Response body:', responseText)\n\n    if (response.status === 404) {\n      console.error('❌ 404 Error - Genre not supported or endpoint issue')\n      console.error('Genres attempted:', genreArray)\n      return []\n    }\n\n    if (!response.ok) {\n      console.error('❌ API Error:', response.status)\n      return []\n    }\n\n    // Parse the response\n    const data = JSON.parse(responseText)\n    console.log('✓ Tracks received:', data.tracks?.length || 0)\n    return data.tracks || []\n  } catch (error) {\n    console.error('❌ Error in getRecommendations:', error)\n    return []\n  }\n}"],"mappings":"AAAA,SAAQA,cAAc,QAAO,eAAe;AAE5C,OAAO,MAAMC,kBAAkB,GAAG,MAAAA,CAAOC,MAAM,EAAEC,KAAK,GAAG,EAAE,KAAK;EAC9D,IAAI;IAAA,IAAAC,YAAA;IACF,MAAMC,KAAK,GAAG,MAAML,cAAc,CAAC,CAAC;IACpCM,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC;;IAEpD;IACA,MAAMG,UAAU,GAAGC,KAAK,CAACC,OAAO,CAACR,MAAM,CAAC,GAAGA,MAAM,GAAG,CAACA,MAAM,CAAC;IAC5D,MAAMS,UAAU,GAAGH,UAAU,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;IAEnD,MAAMC,GAAG,GAAG,0DAA0DH,UAAU,UAAUR,KAAK,EAAE;IACjGG,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEO,GAAG,CAAC;IAChCR,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEC,UAAU,CAAC;IAE7C,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;MAChCG,OAAO,EAAE;QACP,eAAe,EAAE,UAAUZ,KAAK;MAClC;IACF,CAAC,CAAC;IAEFC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEQ,QAAQ,CAACG,MAAM,CAAC;IAChDZ,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEY,MAAM,CAACC,WAAW,CAACL,QAAQ,CAACE,OAAO,CAACI,OAAO,CAAC,CAAC,CAAC,CAAC;;IAEhF;IACA,MAAMC,YAAY,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAC1CjB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEe,YAAY,CAAC;IAE3C,IAAIP,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;MAC3BZ,OAAO,CAACkB,KAAK,CAAC,qDAAqD,CAAC;MACpElB,OAAO,CAACkB,KAAK,CAAC,mBAAmB,EAAEhB,UAAU,CAAC;MAC9C,OAAO,EAAE;IACX;IAEA,IAAI,CAACO,QAAQ,CAACU,EAAE,EAAE;MAChBnB,OAAO,CAACkB,KAAK,CAAC,cAAc,EAAET,QAAQ,CAACG,MAAM,CAAC;MAC9C,OAAO,EAAE;IACX;;IAEA;IACA,MAAMQ,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACN,YAAY,CAAC;IACrChB,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE,EAAAH,YAAA,GAAAsB,IAAI,CAACG,MAAM,cAAAzB,YAAA,uBAAXA,YAAA,CAAa0B,MAAM,KAAI,CAAC,CAAC;IAC3D,OAAOJ,IAAI,CAACG,MAAM,IAAI,EAAE;EAC1B,CAAC,CAAC,OAAOL,KAAK,EAAE;IACdlB,OAAO,CAACkB,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,OAAO,EAAE;EACX;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}