{"ast":null,"code":"var _jsxFileName = \"/Users/wendyzhan/DynamicWebFolder/DynamicWeb2025/Midterm/musicmood/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Navbar from './components/Navbar';\nimport Panel from './components/Panel';\nimport Button from './components/Button';\nimport MoodCard from './components/MoodCard';\nimport MealCard from './components/MealCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedMood, setSelectedMood] = useState(null);\n  const [meals, setMeals] = useState([]);\n  const moods = [{\n    mood: 'Happy',\n    description: 'Light & Fresh',\n    category: 'Seafood'\n  }, {\n    mood: 'Relaxed',\n    description: 'Comfort Food',\n    category: 'Pasta'\n  }, {\n    mood: 'Tired',\n    description: 'Quick & Easy',\n    category: 'Chicken'\n  }, {\n    mood: 'Excited',\n    description: 'Special Treats',\n    category: 'Dessert'\n  }, {\n    mood: 'Adventurous',\n    description: 'Try Something New',\n    category: 'Vegetarian'\n  }, {\n    mood: 'Love',\n    description: 'Elegant Dining',\n    category: 'Lamb'\n  }];\n  const fetchMeals = async category => {\n    const response = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${category}`);\n    const data = await response.json();\n    if (data.meals) {\n      const detailedMeals = await Promise.all(data.meals.slice(0, 3).map(async meal => {\n        const detailResponse = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${meal.idMeal}`);\n        const detailData = await detailResponse.json();\n        return detailData.meals[0];\n      }));\n      setMeals(detailedMeals);\n    } else {\n      setMeals([]);\n    }\n  };\n  useEffect(() => {\n    if (selectedMood) {\n      fetchMeals(selectedMood.category);\n    }\n  }, [selectedMood]);\n  const handleMoodSelect = mood => {\n    setSelectedMood(mood);\n  };\n  const handleReset = () => {\n    setSelectedMood(null);\n    setMeals([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-orange-50\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4 py-8\",\n      children: [/*#__PURE__*/_jsxDEV(Panel, {\n        title: \"How are you feeling today?\",\n        className: \"mb-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4\",\n          children: moods.map(mood => /*#__PURE__*/_jsxDEV(MoodCard, {\n            mood: mood.mood,\n            description: mood.description,\n            onClick: () => handleMoodSelect(mood),\n            isSelected: (selectedMood === null || selectedMood === void 0 ? void 0 : selectedMood.mood) === mood.mood\n          }, mood.mood, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), selectedMood && meals.length > 0 && /*#__PURE__*/_jsxDEV(Panel, {\n        className: \"mb-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",\n          children: meals.map(meal => /*#__PURE__*/_jsxDEV(MealCard, {\n            meal: meal\n          }, meal.idMeal, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"6fkfAjicTVr8BpIniESQf7AYDHs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","Panel","Button","MoodCard","MealCard","jsxDEV","_jsxDEV","App","_s","selectedMood","setSelectedMood","meals","setMeals","moods","mood","description","category","fetchMeals","response","fetch","data","json","detailedMeals","Promise","all","slice","map","meal","detailResponse","idMeal","detailData","handleMoodSelect","handleReset","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","isSelected","length","_c","$RefreshReg$"],"sources":["/Users/wendyzhan/DynamicWebFolder/DynamicWeb2025/Midterm/musicmood/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Navbar from './components/Navbar';\nimport Panel from './components/Panel';\nimport Button from './components/Button';\nimport MoodCard from './components/MoodCard';\nimport MealCard from './components/MealCard';\n\nconst App = () => {\n  const [selectedMood, setSelectedMood] = useState(null);\n  const [meals, setMeals] = useState([]);\n\n  const moods = [\n    { mood: 'Happy', description: 'Light & Fresh', category: 'Seafood' },\n    { mood: 'Relaxed', description: 'Comfort Food', category: 'Pasta' },\n    { mood: 'Tired', description: 'Quick & Easy', category: 'Chicken' },\n    { mood: 'Excited', description: 'Special Treats', category: 'Dessert' },\n    { mood: 'Adventurous', description: 'Try Something New', category: 'Vegetarian' },\n    { mood: 'Love', description: 'Elegant Dining', category: 'Lamb' }\n  ];\n\n  const fetchMeals = async (category) => {\n    const response = await fetch(\n      `https://www.themealdb.com/api/json/v1/1/filter.php?c=${category}`\n    );\n    const data = await response.json();\n    \n    if (data.meals) {\n      const detailedMeals = await Promise.all(\n        data.meals.slice(0, 3).map(async (meal) => {\n          const detailResponse = await fetch(\n            `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${meal.idMeal}`\n          );\n          const detailData = await detailResponse.json();\n          return detailData.meals[0];\n        })\n      );\n      setMeals(detailedMeals);\n    } else {\n      setMeals([]);\n    }\n  };\n\n  useEffect(() => {\n    if (selectedMood) {\n      fetchMeals(selectedMood.category);\n    }\n  }, [selectedMood]);\n\n  const handleMoodSelect = (mood) => {\n    setSelectedMood(mood);\n  };\n\n  const handleReset = () => {\n    setSelectedMood(null);\n    setMeals([]);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-orange-50\">\n      <Navbar />\n      \n      <div className=\"container mx-auto px-4 py-8\">\n        <Panel title=\"How are you feeling today?\" className=\"mb-8\">\n          <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4\">\n            {moods.map((mood) => (\n              <MoodCard\n                key={mood.mood}\n                mood={mood.mood}\n                description={mood.description}\n                onClick={() => handleMoodSelect(mood)}\n                isSelected={selectedMood?.mood === mood.mood}\n              />\n            ))}\n          </div>\n        </Panel>\n\n        {selectedMood && meals.length > 0 && (\n          <Panel className=\"mb-8\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {meals.map((meal) => (\n                <MealCard key={meal.idMeal} meal={meal} />\n              ))}\n            </div>\n          </Panel>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}