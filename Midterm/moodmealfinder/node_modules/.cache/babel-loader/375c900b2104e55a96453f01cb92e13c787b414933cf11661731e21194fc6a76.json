{"ast":null,"code":"var _jsxFileName = \"/Users/wendyzhan/DynamicWebFolder/DynamicWeb2025/Midterm/musicmood/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Navbar from './components/Navbar';\nimport Panel from './components/Panel';\nimport Button from './components/Button';\nimport MoodCard from './components/MoodCard';\nimport MealCard from './components/MealCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedMood, setSelectedMood] = useState(null);\n  const [meals, setMeals] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const moods = [{\n    emoji: '😊',\n    mood: 'Happy',\n    description: 'Light & Fresh',\n    category: 'Seafood'\n  }, {\n    emoji: '😌',\n    mood: 'Relaxed',\n    description: 'Comfort Food',\n    category: 'Pasta'\n  }, {\n    emoji: '😴',\n    mood: 'Tired',\n    description: 'Quick & Easy',\n    category: 'Chicken'\n  }, {\n    emoji: '🎉',\n    mood: 'Excited',\n    description: 'Special Treats',\n    category: 'Dessert'\n  }, {\n    emoji: '🤔',\n    mood: 'Adventurous',\n    description: 'Try Something New',\n    category: 'Vegetarian'\n  }, {\n    emoji: '❤️',\n    mood: 'Romantic',\n    description: 'Elegant Dining',\n    category: 'Lamb'\n  }];\n  const fetchMeals = async category => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${category}`);\n      const data = await response.json();\n      if (data.meals) {\n        // Get detailed info for first 3 meals\n        const detailedMeals = await Promise.all(data.meals.slice(0, 3).map(async meal => {\n          const detailResponse = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${meal.idMeal}`);\n          const detailData = await detailResponse.json();\n          return detailData.meals[0];\n        }));\n        setMeals(detailedMeals);\n      } else {\n        setMeals([]);\n      }\n    } catch (err) {\n      setError('Failed to fetch meals. Please try again.');\n      setMeals([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (selectedMood) {\n      fetchMeals(selectedMood.category);\n    }\n  }, [selectedMood]);\n  const handleMoodSelect = mood => {\n    setSelectedMood(mood);\n  };\n  const handleReset = () => {\n    setSelectedMood(null);\n    setMeals([]);\n    setError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-orange-50\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4 py-8\",\n      children: [/*#__PURE__*/_jsxDEV(Panel, {\n        title: \"How are you feeling today?\",\n        className: \"mb-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4\",\n          children: moods.map(mood => /*#__PURE__*/_jsxDEV(MoodCard, {\n            emoji: mood.emoji,\n            mood: mood.mood,\n            description: mood.description,\n            onClick: () => handleMoodSelect(mood),\n            isSelected: (selectedMood === null || selectedMood === void 0 ? void 0 : selectedMood.mood) === mood.mood\n          }, mood.mood, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), selectedMood && /*#__PURE__*/_jsxDEV(Panel, {\n        className: \"mb-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-6\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleReset,\n            variant: \"secondary\",\n            children: \"Choose Another Mood\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), !selectedMood && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-12\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 text-lg\",\n          children: \"\\uD83D\\uDC46 Select a mood above to discover amazing meals!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"HDcTWDVmaEPC7fTt5cFGzokNtHU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","Panel","Button","MoodCard","MealCard","jsxDEV","_jsxDEV","App","_s","selectedMood","setSelectedMood","meals","setMeals","loading","setLoading","error","setError","moods","emoji","mood","description","category","fetchMeals","response","fetch","data","json","detailedMeals","Promise","all","slice","map","meal","detailResponse","idMeal","detailData","err","handleMoodSelect","handleReset","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","isSelected","variant","_c","$RefreshReg$"],"sources":["/Users/wendyzhan/DynamicWebFolder/DynamicWeb2025/Midterm/musicmood/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Navbar from './components/Navbar';\nimport Panel from './components/Panel';\nimport Button from './components/Button';\nimport MoodCard from './components/MoodCard';\nimport MealCard from './components/MealCard';\n\nconst App = () => {\n  const [selectedMood, setSelectedMood] = useState(null);\n  const [meals, setMeals] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const moods = [\n    { emoji: '😊', mood: 'Happy', description: 'Light & Fresh', category: 'Seafood' },\n    { emoji: '😌', mood: 'Relaxed', description: 'Comfort Food', category: 'Pasta' },\n    { emoji: '😴', mood: 'Tired', description: 'Quick & Easy', category: 'Chicken' },\n    { emoji: '🎉', mood: 'Excited', description: 'Special Treats', category: 'Dessert' },\n    { emoji: '🤔', mood: 'Adventurous', description: 'Try Something New', category: 'Vegetarian' },\n    { emoji: '❤️', mood: 'Romantic', description: 'Elegant Dining', category: 'Lamb' }\n  ];\n\n  const fetchMeals = async (category) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await fetch(\n        `https://www.themealdb.com/api/json/v1/1/filter.php?c=${category}`\n      );\n      const data = await response.json();\n      \n      if (data.meals) {\n        // Get detailed info for first 3 meals\n        const detailedMeals = await Promise.all(\n          data.meals.slice(0, 3).map(async (meal) => {\n            const detailResponse = await fetch(\n              `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${meal.idMeal}`\n            );\n            const detailData = await detailResponse.json();\n            return detailData.meals[0];\n          })\n        );\n        setMeals(detailedMeals);} else {\n        setMeals([]);\n      }\n    } catch (err) {\n      setError('Failed to fetch meals. Please try again.');\n      setMeals([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (selectedMood) {\n      fetchMeals(selectedMood.category);\n    }\n  }, [selectedMood]);\n\n  const handleMoodSelect = (mood) => {\n    setSelectedMood(mood);\n  };\n\n  const handleReset = () => {\n    setSelectedMood(null);\n    setMeals([]);\n    setError(null);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-orange-50\">\n      <Navbar />\n      \n      <div className=\"container mx-auto px-4 py-8\">\n        <Panel title=\"How are you feeling today?\" className=\"mb-8\">\n          <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4\">\n            {moods.map((mood) => (\n              <MoodCard\n                key={mood.mood}\n                emoji={mood.emoji}\n                mood={mood.mood}\n                description={mood.description}\n                onClick={() => handleMoodSelect(mood)}\n                isSelected={selectedMood?.mood === mood.mood}\n              />\n            ))}\n          </div>\n        </Panel>\n\n        {selectedMood && (\n          <Panel className=\"mb-8\">\n            <div className=\"flex justify-between items-center mb-6\">\n              <Button onClick={handleReset} variant=\"secondary\">\n                Choose Another Mood\n              </Button>\n            </div>\n          </Panel>\n        )}\n\n        {!selectedMood && (\n          <div className=\"text-center py-12\">\n            <p className=\"text-gray-600 text-lg\">\n              👆 Select a mood above to discover amazing meals!\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}