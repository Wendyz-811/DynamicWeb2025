{"ast":null,"code":"const CLIENT_ID = '01e7bd2c3cd94726ac99f8dab2c7d06b';\nconst CLIENT_SECRET = '41ca7673dacf4a3fa88450fc6490c4d5';\nlet cachedToken = null;\nlet tokenExpiry = null;\nexport const getAccessToken = async () => {\n  // Return cached token if still valid\n  if (cachedToken && tokenExpiry && Date.now() < tokenExpiry) {\n    return cachedToken;\n  }\n  try {\n    const response = await fetch('https://accounts.spotify.com/api/token', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Authorization': 'Basic ' + btoa(CLIENT_ID + ':' + CLIENT_SECRET)\n      },\n      body: 'grant_type=client_credentials'\n    });\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('Auth failed:', response.status, errorText);\n      throw new Error(`Authentication failed: ${response.status}`);\n    }\n    const data = await response.json();\n    if (!data.access_token) {\n      console.error('No access token in response:', data);\n      throw new Error('No access token received');\n    }\n\n    // Cache the token (expires in 1 hour, we'll refresh after 55 minutes)\n    cachedToken = data.access_token;\n    tokenExpiry = Date.now() + 55 * 60 * 1000;\n    console.log('✓ Successfully authenticated with Spotify');\n    return cachedToken;\n  } catch (error) {\n    console.error('Error getting access token:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["CLIENT_ID","CLIENT_SECRET","cachedToken","tokenExpiry","getAccessToken","Date","now","response","fetch","method","headers","btoa","body","ok","errorText","text","console","error","status","Error","data","json","access_token","log"],"sources":["/Users/wendyzhan/DynamicWebFolder/DynamicWeb2025/Midterm/musicmoodtracker/src/services/spotifyAuth.js"],"sourcesContent":["const CLIENT_ID = '01e7bd2c3cd94726ac99f8dab2c7d06b'\nconst CLIENT_SECRET = '41ca7673dacf4a3fa88450fc6490c4d5'\n\nlet cachedToken = null\nlet tokenExpiry = null\n\nexport const getAccessToken = async () => {\n  // Return cached token if still valid\n  if (cachedToken && tokenExpiry && Date.now() < tokenExpiry) {\n    return cachedToken\n  }\n\n  try {\n    const response = await fetch('https://accounts.spotify.com/api/token', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Authorization': 'Basic ' + btoa(CLIENT_ID + ':' + CLIENT_SECRET)\n      },\n      body: 'grant_type=client_credentials'\n    })\n\n    if (!response.ok) {\n      const errorText = await response.text()\n      console.error('Auth failed:', response.status, errorText)\n      throw new Error(`Authentication failed: ${response.status}`)\n    }\n\n    const data = await response.json()\n    \n    if (!data.access_token) {\n      console.error('No access token in response:', data)\n      throw new Error('No access token received')\n    }\n\n    // Cache the token (expires in 1 hour, we'll refresh after 55 minutes)\n    cachedToken = data.access_token\n    tokenExpiry = Date.now() + (55 * 60 * 1000)\n    \n    console.log('✓ Successfully authenticated with Spotify')\n    return cachedToken\n  } catch (error) {\n    console.error('Error getting access token:', error)\n    throw error\n  }\n}"],"mappings":"AAAA,MAAMA,SAAS,GAAG,kCAAkC;AACpD,MAAMC,aAAa,GAAG,kCAAkC;AAExD,IAAIC,WAAW,GAAG,IAAI;AACtB,IAAIC,WAAW,GAAG,IAAI;AAEtB,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC;EACA,IAAIF,WAAW,IAAIC,WAAW,IAAIE,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGH,WAAW,EAAE;IAC1D,OAAOD,WAAW;EACpB;EAEA,IAAI;IACF,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;MACrEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,mCAAmC;QACnD,eAAe,EAAE,QAAQ,GAAGC,IAAI,CAACX,SAAS,GAAG,GAAG,GAAGC,aAAa;MAClE,CAAC;MACDW,IAAI,EAAE;IACR,CAAC,CAAC;IAEF,IAAI,CAACL,QAAQ,CAACM,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MACvCC,OAAO,CAACC,KAAK,CAAC,cAAc,EAAEV,QAAQ,CAACW,MAAM,EAAEJ,SAAS,CAAC;MACzD,MAAM,IAAIK,KAAK,CAAC,0BAA0BZ,QAAQ,CAACW,MAAM,EAAE,CAAC;IAC9D;IAEA,MAAME,IAAI,GAAG,MAAMb,QAAQ,CAACc,IAAI,CAAC,CAAC;IAElC,IAAI,CAACD,IAAI,CAACE,YAAY,EAAE;MACtBN,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEG,IAAI,CAAC;MACnD,MAAM,IAAID,KAAK,CAAC,0BAA0B,CAAC;IAC7C;;IAEA;IACAjB,WAAW,GAAGkB,IAAI,CAACE,YAAY;IAC/BnB,WAAW,GAAGE,IAAI,CAACC,GAAG,CAAC,CAAC,GAAI,EAAE,GAAG,EAAE,GAAG,IAAK;IAE3CU,OAAO,CAACO,GAAG,CAAC,2CAA2C,CAAC;IACxD,OAAOrB,WAAW;EACpB,CAAC,CAAC,OAAOe,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}